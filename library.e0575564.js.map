{"mappings":"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","sources":["src/library.js","src/js/queue-library.js","src/js/open-modal-library.js"],"sourcesContent":["import { spinnerPlay, spinnerStop } from './js/spinner';\n// import { renderTrendingMovies } from './js/API/get-trending';\n\n// import { renderModalMovie } from './js/API/get-movie-info';\n\n// import { onFormSubmit } from './js/gallery';\nimport { openModalTeam } from './js/open-modal-team';\n\nimport './js/switch-bg-theme';\n\nimport { scrollFunction } from './js/button-up';\n\n// import { onCliсkBtnWatch } from './js/API/get-movie-trailer';\nimport { onCliсkBtnWatchGallery } from './js/API/get-movie-trailer';\n\nimport { onOpenQueueLibrary } from './js/queue-library';\n\nimport { onOpenWatchedLibrary } from './js/watched-library';\n\nimport { loadWatchedMoviesFromLocalStorage } from './js/watched-library';\nimport { onLibraryGallery } from './js/open-modal-library';\nimport { refs } from './js/refs';\n\n///Запуск спінера при завантаженні\nspinnerPlay();\nwindow.addEventListener('load', function (e) {\n  spinnerStop();\n});\n///Закінчення спінера при завантаженні\n\n///Запуск кнопки вверх при скролі\nwindow.addEventListener('scroll', scrollFunction);\n\n// При завантаженні сторінки My library рендериться картки з локал сторадж watchedMovies\nwindow.addEventListener('load', loadWatchedMoviesFromLocalStorage);\n\nrefs.libraryGallery.addEventListener('click', onCliсkBtnWatchGallery);\n","import { refs } from './refs';\n\nimport { loadFromLocalStorage } from './local-storage';\nimport {\n  createMarkupWhenLocalStorageEmpty,\n  createMarkupWatchedMovies,\n} from './watched-library';\n\nimport { renderBtn } from './API/get-movie-trailer';\n\nconst KEY_QUEUE_MOVIES = 'queueMovies';\n\nif (refs.btnLibraryQueue) {\n  refs.btnLibraryQueue.addEventListener('click', onOpenQueueLibrary);\n}\n\nexport function onOpenQueueLibrary(e) {\n  refs.btnLibraryQueue.classList.add('library__btn--active');\n  refs.btnLibraryWatched.classList.remove('library__btn--active');\n\n  let localQueueMovies = loadFromLocalStorage(KEY_QUEUE_MOVIES);\n\n  if (!localQueueMovies || !Object.keys(localQueueMovies).length) {\n    const markupNothing = createMarkupWhenLocalStorageEmpty();\n    refs.libraryGallery.innerHTML = markupNothing;\n  } else {\n    const moviesToRender = Object.values(localQueueMovies);\n    const markup = moviesToRender.map(createMarkupWatchedMovies).join('');\n\n    if (refs.libraryGallery) {\n      refs.libraryGallery.innerHTML = markup;\n\n      renderBtn();\n    }\n  }\n}\n","import {\n  KEY_WATCHED_MOVIES,\n  KEY_QUEUE_MOVIES,\n  loadFromLocalStorage,\n  checkLocalStorageWatchedMovies,\n  checkLocalStorageQueueMovies,\n} from './local-storage';\nimport { renderBtn } from './API/get-movie-trailer';\nimport {\n  onEscKeyPress,\n  onBackdropClick,\n  offCloseModal,\n} from './API/get-movie-info';\nimport { IMAGE_URL } from './API/api-params';\n\nimport { refs } from './refs';\n\nrefs.libraryGallery.addEventListener('click', onLibraryGallery);\n\nlet idMovie;\nlet currentMovie;\n\nexport function onLibraryGallery(e) {\n  idMovie = Number(e.target.dataset.id);\n  const film = e.target.closest('.frame');\n  if (!film) {\n    return;\n  }\n\n  let markup = '';\n\n  const watchedMoviesFromLocalStorage =\n    loadFromLocalStorage(KEY_WATCHED_MOVIES);\n  const queueMoviesFromLocalStorage = loadFromLocalStorage(KEY_QUEUE_MOVIES);\n\n  if (watchedMoviesFromLocalStorage[idMovie]) {\n    currentMovie = watchedMoviesFromLocalStorage[idMovie];\n\n    markup = createMarkupModal(watchedMoviesFromLocalStorage[idMovie]);\n  } else if (queueMoviesFromLocalStorage[idMovie]) {\n    currentMovie = queueMoviesFromLocalStorage[idMovie];\n    markup = createMarkupModal(queueMoviesFromLocalStorage[idMovie]);\n  }\n  refs.modal.innerHTML = markup;\n  refs.body.classList.add('no-scroll');\n\n  // render trailer\n  renderBtn();\n\n  // close\n  window.addEventListener('keydown', onEscKeyPress);\n  refs.modalBackdrop.classList.add('show-modal');\n  refs.modalBackdrop.addEventListener('click', onBackdropClick);\n  refs.closeModalBtn.addEventListener('click', offCloseModal);\n\n  //Вешаем событие на buttons:\n  if (refs.modalBackdrop.classList.contains('show-modal')) {\n    refs.modalContainer.addEventListener('click', onModalLibraryBtnsClick);\n  }\n}\n\nfunction onModalLibraryBtnsClick(e) {\n  if (e.target.classList.contains('js-add-watched')) {\n    checkLocalStorageWatchedMovies(e.target, currentMovie);\n  } else if (e.target.classList.contains('js-add-queue')) {\n    checkLocalStorageQueueMovies(e.target, currentMovie);\n  }\n}\n\nexport function createMarkupModal({\n  voteAverage,\n  voteCount,\n  genres,\n  title,\n  posterPath,\n  originalName,\n  popularity,\n  overview,\n  id,\n}) {\n  // Проверка есть ли такой обьект в локал сторадж?\n  const watchedMoviesLocalStorage = loadFromLocalStorage(KEY_WATCHED_MOVIES);\n  const queueMoviesLocalStorage = loadFromLocalStorage(KEY_QUEUE_MOVIES);\n\n  let textBtnWatched = 'ADD TO WATCHED';\n  let textBtnQueue = 'ADD TO QUEUE';\n\n  if (watchedMoviesLocalStorage && watchedMoviesLocalStorage[id]) {\n    textBtnWatched = 'REMOVE FROM WATCHED';\n  }\n\n  if (queueMoviesLocalStorage && queueMoviesLocalStorage[id]) {\n    textBtnQueue = 'REMOVE FROM QUEUE';\n  }\n\n  const modalGenres = genres.map(genre => genre.name);\n\n  return `\n          <img class=\"img-modal\"    src=\"${\n            posterPath\n              ? IMAGE_URL + posterPath\n              : 'https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-'\n          }\" alt=\"${title}\" data-id=${id} />\n          <div class=\"container-modal\">\n            <b class=\"title-modal\">${title}</b>\n            <table class=\"table\">\n              <tr class=\"table-separator\">\n                <th class=\"table__text\">Vote / Votes</th>\n                <th><span class=\"vote-average\">${voteAverage.toFixed(\n                  1\n                )}</span> / <span class=\"vote-count\">${voteCount}</span></th>\n              </tr>\n              <tr class=\"table-separator\">\n                <th class=\"table__text\">Popularity</th>\n                <th>${popularity.toFixed(1)}</th>\n              </tr>\n              <tr class=\"table-separator\">\n                <th class=\"table__text\">Original Title</th>\n                <th>${title ? title : originalName}</th>\n              </tr>\n              <tr class=\"table-separator\">\n                <th class=\"table__text\">Genre</th>\n                <th>${modalGenres}</th>\n              </tr>\n            </table>\n            <b class=\"title-about__modal\">ABOUT</b>\n            <p class=\"about-text__modal about-scrollbar\">${overview}\n            </p>\n            <div class=\"buttons-modal\">\n              <button type=\"button\" class=\"button-watched__modal js-add-watched\">\n                  ${textBtnWatched}\n              </button>\n              <button type=\"button\" class=\"button-queue__modal js-add-queue\">${textBtnQueue}</button>\n              </div>\n               <button type=\"button\" class=\"watch-trailer-btn-gallery is-hidden \" data-id=${id} >Watch the trailer</button>\n          </div>\n  \n            \n          `;\n}\n"],"names":["$j1lrD","parcelRequire","$4Nugj","refs","btnLibraryQueue","addEventListener","e","classList","add","btnLibraryWatched","remove","localQueueMovies","$4LMMA","loadFromLocalStorage","Object","keys","length","markup","values","map","$5UWmu","createMarkupWatchedMovies","join","libraryGallery","innerHTML","$84yK5","renderBtn","markupNothing","createMarkupWhenLocalStorageEmpty","$572566355069554e$var$idMovie","$572566355069554e$var$currentMovie","$572566355069554e$var$onModalLibraryBtnsClick","target","contains","checkLocalStorageWatchedMovies","checkLocalStorageQueueMovies","$572566355069554e$export$800eaa8b597dc39b","param","voteAverage","voteCount","genres","title","posterPath","originalName","popularity","overview","id","watchedMoviesLocalStorage","KEY_WATCHED_MOVIES","queueMoviesLocalStorage","KEY_QUEUE_MOVIES","textBtnWatched","textBtnQueue","modalGenres","genre","name","concat","$aLMAk","IMAGE_URL","toFixed","Number","dataset","closest","watchedMoviesFromLocalStorage","queueMoviesFromLocalStorage","modal","body","window","$5Hwq9","onEscKeyPress","modalBackdrop","onBackdropClick","closeModalBtn","offCloseModal","modalContainer","spinnerPlay","spinnerStop","$ghI91","scrollFunction","loadWatchedMoviesFromLocalStorage"],"version":3,"file":"library.e0575564.js.map"}